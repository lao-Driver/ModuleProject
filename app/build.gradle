apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'
//apply tinker插件
apply plugin: 'com.tencent.tinker.patch'
android {
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        applicationId "com.example.administrator"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        buildToolsVersion build_versions.build_tools
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        multiDexEnabled true
        multiDexKeepProguard file('multiDexKeep.pro') // keep specific classes using proguard syntax
        multiDexKeepFile file('multiDexKeep.txt')
    }
//  设置签名
    signingConfigs {
        Sweejar {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('../keystore/mings.jks')
            storePassword '123456'
        }

    }

    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //开启混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.Sweejar
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
        }
        debug {
            //给applicationId添加后缀“.debug”
            applicationIdSuffix ".debug"
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.Sweejar
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
        }
    }
    dexOptions {
        //设置App的大小
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    if (!isModule.toBoolean()) {
           implementation project(':OnePageLibrary')
           implementation project(':FivePageLibrary')
           implementation project(':fourpagelibrary')
           implementation project(':ThreeLibrary')
           implementation project(':TwoPageLibrary')
    }
    implementation project(':CommonLibrary')
    // app分包
    implementation 'com.android.support:multidex:1.0.1'
    // 腾讯bugly 异常上报  热更新
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
}
